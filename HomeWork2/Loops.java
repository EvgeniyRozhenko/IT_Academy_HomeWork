package HomeWork2;

/*Домашнее задание N2:
1. Циклы:
1.1. Вывести таблицу умножения в консоль
1.2. Перемножить числа от 1 до числа (включительно) введеннго через аргумент к исполняемой программе
1.3. Все цифры из числа введенного через аргумент к исполняемой программе перемножить между собой и
вывести ход вычислений в консоль
*/
/*UPDATED TASK:
1. Циклы. Для преобразования строки в число можно использовать http://proglang.su/java/numbers-parseint,
если хотите можете добавить проверки на корректность ввода данных. Число положительное, максимум long:
    1.1. Перемножить числа от 1 до числа (включительно) введенного через аргумент к исполняемой программе. Есть нюанс
    с переполнением, можно добавить проверки и сообщения пользователю. Пример: Ввели 5, должно получиться
    в консоли: 1 * 2 * 3 * 4 * 5 = ответ
    	1.1.1. Используя только цикл
    	1.1.2.* Используя рекурсию
    1.2. Все цифры из числа введенного через аргумент к исполняемой программе перемножить между собой и вывести ход
    вычислений в консоль. Пользователь обязан ввести целое число. Если ввели не целое то выдать сообщение о том что
    пользователь ввёл некорректные данные.
		1.2.1 Пример: Ввели 181232375, должно получиться в консоли: 1 * 8 * 1 * 2 * 3 * 2 * 3 * 7 * 5 = 10 080
		1.2.2 Пример: Ввели 99.2, должно получиться в консоли: Введено не целое число
		1.2.3 Пример: Ввели Привет, должно получиться в консоли: Введено не число
    1.3. Возведение в степень. Через консоль пользователь вводит два числа. Первое число это число которое мы будем
    возводить, Второе число это степень в которую возводят первое число. Степень - только положительная и целая.
    Возводимое число - может быть отрицательным и оно будет дробным. Math использовать нельзя.
		1.3.1 Пример: Ввели 18 и 5, должно получиться в консоли: 18.0 ^ 5 = 1 889 568.0
		1.3.2 Пример: Ввели 7.5 и 2, должно получиться в консоли: 7.5 ^ 2 = 56.25
    1.4.* Умножать число long a = 1; пока не произойдёт переполнение. В конце в консоль вывести сообщение со значением
    до переполнения и после переполнения. Умножать на:
    	1.4.1. 3
    	1.4.2. 188
    	1.4.3. -19
    	1.4.4. Да и вообще на любое целочисленное
    1.5. Вывести таблицу умножения в консоль. В консоли должно получиться также как и на картинке (динозаврика рисовать
    не надо): https://www.dropbox.com/s/ibakfuppvy2w32g/multiplication_table.jpeg?dl=0
*/

import java.util.Scanner;

public class Loops {

    /** метод проверки переполнения (до и после).
     * @param mult множитель
     */
    public static void checkMultiplicationOverflow(int mult){
        if (mult<0){
            mult *= -1;
        }
        long a = 1;
        long temp = 0;
        while (a > 0){
            a *= mult;
            if (temp < a){
                temp = a;
            }
        }
        System.out.println(temp);
        System.out.println(a);
    }

    /** метод возведения в степень
     * value - умножаемое дробное число
     * powValue - целый множитель числа
     */
    public static void mathPowerOfNumber (){
        Scanner input = new Scanner(System.in); // создаём сканер для ввода через консоль
        System.out.println("Введите умножаемое число");
        double value = input.nextDouble();
        System.out.println("Введите множитель числа");
        int powValue = input.nextInt();
        double result = 1; // создаём переменную для сохранения результата возведения в степень
        if (powValue < 0){  // проверка на отрицательный множитель
            powValue *= -1;
        }
        for (int i = 0; i < powValue; i++){ // алгоритм перемножения числа n-го кол-ва раз между собой
            result *= value; // сохранение результата
        }
        System.out.println(value + " ^ " + powValue + " = " + result); // вывод ответа в консоль
    }

    /** метод Таблица умножения
     * таблица умножения выводится в консоль до числа введённого через аргумент
     * @param x - число введённое через аргумент
     */
    public static void multiplicateInTable(int x) {
        if (x < 0){ // проверка на отрицательное число параметра
            x = Math.abs(x);
        }else if(x == 0){  // проверка на ноль
            System.out.println("Число не может быть 0");
            return;
        }
        for (int i = 1; i <= x; i++) {  // Создаём цикл "for", кот. будет работать пока условие не станет ложным.
            // Получаем правый множитель.
            for (int k = 1; k <= x; k++) { // Создаём цикл в цикле, чтобы получить левое, умножаемое число.
                System.out.print(k + "*" + i + "=" + k * i + "\t" + "   "); // Выводим в консоль полученную таблицу
                // умножения.
            }
            System.out.print("");
            System.out.println("   ");
        }
    }

    /** метод умножения от единицы до числа введённого через аргумент
     * @param x число введённое через аргумент
     */
    public static void multiplicateFromOneToArgum(int x) {
        if (x < 0){  // проверка на отрицательное число параметра
            x = Math.abs(x);
        }else if(x == 0){ // проверка на ноль
            System.out.println("Число не может быть 0");
            return;
        }
        long sum = 1; // создаём переменную суммы
        for (int i = 1; i <= x; i++){ // алгоритм поочередного перемножения и вывод в консоль
            if(i == 1){
                System.out.print(i);
            }else{
                System.out.print(" * " + i);
            }
            sum *= i; // перемножаем единицу с первым числом очерёдности
        }
        System.out.println(" = " + sum); // возвращаем сумму перемножаемых чисел
    }

    /** метод перемножения чисел между собой числа введённого через аргумент
     * @param x число введённое через аргумент
     */
    public static void multiplicateTheNumbs(int x){
        if (x < 0){ // проверка на отрицательное число
            x = Math.abs(x);
        }else if(x == 0){ // проверка на ноль
            System.out.println("Число не может быть 0");
            return;
        }
        int p = 1;           // Создаём вспомогательную переменную, которую будем перемножать с последним числом "X".
        String str = String.valueOf(x); // создаём строку из значения переменной переданной через аргумент
        char[] charsOfString = str.toCharArray(); // разбиваем строку на символы и помещаем в массив char
        for (int i = 0; i < charsOfString.length; i++) { // пробегаем по массиву и выводим элементы в консоль со знаком *
            System.out.print(charsOfString[i]);
            if(i < charsOfString.length-1){
                System.out.print(" * ");
            }
        }
        while (x > 0) {      // Исп. цикл while пока заданное условие "x > 0" не станет false.
            int y = x % 10;  // Отсекаем последнее число из переменной "X" и помещаем в переменную "Y".
            x /= 10;         // Возвращаем в "X" остаток чисел.
            p *= y;          // Сохраняем в "P" значение перемноженных между собой чисел.
        }
        System.out.println(" = " + p); // Выводим результат (сумму) перемножения чисел между собой переменной "X".
    }


    public static void main(String[] args){
        String argString = String.valueOf(args[0]); // создаём строку из элементов аргумента
        char[] charsOfString = argString.toCharArray(); // разбиваем строку на символы и помещаем в массив char
        for(int i:charsOfString){ // пробегаем по массиву и проверяем (по заданию) на "число ли это и целое ли число" и
            if ((i > 48 || i < 57) && i == 46){  // выводим сообщения в случае дробного либо строки переданных через аргумент
                System.out.println("Введено не целое число");
                return;
            } else if ((i < 48 || i > 57) && i != 45){
                System.out.println("Введено не число");
                return;
            }
        }
        Integer x = Integer.valueOf(args[0]);
//        int y = 0;
//        for (String arg : args) {
//
//            Double x = Double.parseDouble(arg);
//            if (x % 1 != 0){
//                System.out.println("Введено не целое число!");
//                return;
//            }
//            y = x.intValue();
//        }

//        multiplicateInTable(x); // выводим таблицу умножения до заданного аргумента
//        System.out.println("");
//        multiplicateTheNumbs(x); // выводим перемножение чисел заданного аргумента между собой
//        System.out.println("");
//        multiplicateFromOneToArgum(x); // выводим результат перемножения от 1 до вводимой через аргумент цифры
//        System.out.println("");
//        mathPowerOfNumber(); // тут происходит баг сканера - когда мы задаём через консоль дробное число, нужно задавать
                             // через запятую, а не точку, иначе вылетит ошибка InputMismatchException.
        checkMultiplicationOverflow(-19);
    }
}
